{"version":3,"sources":["content.min.js"],"names":["addClick","document","getElementById","getElementsByTagName","liList","len","length","i","onclick","showPic","this","pic","_pic","_href","getAttribute","_title","_targetName","setAttribute","firstChild","nodeValue","appendFigure","_figCaption","createElement","_img","_text1","createTextNode","_figure","appendChild","insertAfter","newElement","targetElement","_newElement","_targetElement","_parentNode","parentNode","lastChild","insertBefore","nextSibling","checkOnLoad","fun","oldLoad","window","onload","getXMLHttpRequest","XMLHttpRequest","ActiveXObject","ajax_send","xhr","open","onreadystatechange","readyState","console","log","response","p","text","send","alert"],"mappings":"AAKA,SAASA,WAEL,IAAIC,SAASC,eACT,OAAO,EAEX,IAAID,SAASE,qBACT,OAAO,EAIX,IAAI,IAFAC,EAASH,SAASE,qBAAqB,KACvCE,EAAMD,EAAOE,OACTC,EAAI,EAAEA,EAAIF,EAAKE,IACnBH,EAAOG,GAAGC,QAAU,WAEhB,OADAC,QAAQC,OACD,GAKnB,SAASD,QAAQE,GACb,IAAIC,EAAOD,EACPE,EAAQD,EAAKE,aAAa,QAC1BC,EAASH,EAAKE,aAAa,SAC3BE,EAAcf,SAASC,eAAe,YACzBD,SAASC,eAAe,WAC9Be,aAAa,MAAMJ,GAE9BG,EAAYE,WAAWC,UAAYJ,EAGvC,SAASK,eACL,IAAIC,EAAepB,SAASqB,cAAc,cACtCC,EAAOtB,SAASqB,cAAc,OAC9BE,EAASvB,SAASwB,eAAe,QACjCC,EAAUzB,SAASC,eAAe,UACtCmB,EAAYJ,aAAa,KAAK,YAC9BI,EAAYM,YAAYH,GACxBD,EAAKN,aAAa,MAAM,yBACxBM,EAAKN,aAAa,MAAM,UACxBM,EAAKN,aAAa,KAAK,WAEvBS,EAAQC,YAAYN,GACpBK,EAAQC,YAAYJ,GAKxB,SAASK,YAAYC,EAAWC,GAC5B,IAAIC,EAAcF,EACdG,EAAiBF,EACjBG,EAAcD,EAAeE,WAC9BD,EAAYE,WAAaH,EACxBC,EAAYN,YAAYI,GAExBE,EAAYG,aAAaL,EAAYC,EAAeK,aAM5D,SAASC,YAAYC,GACjB,IAAIC,EAAUC,OAAOC,OACM,mBAAjBD,OAAOC,OAEbD,OAAOC,OAASH,IAGhBE,OAAOC,OAAS,WACZF,IACAD,KAiBZ,SAASI,oBACL,OAAGF,OAAOG,eACC,IAAIA,eAEJ,IAAIC,cAAc,qBAKjC,SAASC,YACL,IAAIC,EAAMJ,oBACPI,GACCA,EAAIC,KAAK,MAAM,uBAAsB,GACrCD,EAAIE,mBAAqB,WACrB,GAAqB,GAAlBF,EAAIG,WAAgB,CAEnBC,QAAQC,IAAIL,EAAIM,UAChB,IAAIC,EAAIrD,SAASqB,cAAc,KAC3BiC,EAAOtD,SAASwB,eAAesB,EAAIM,UACvCC,EAAE3B,YAAY4B,GACdtD,SAASC,eAAe,QAAQyB,YAAY2B,KAGpDP,EAAIS,QAEJC,MAAM,6BAlHdnB,YAAYtC,UACZsC,YAAYlB,cACZkB,YAAYQ","file":"../content.min.js","sourcesContent":["\r\ncheckOnLoad(addClick);\r\ncheckOnLoad(appendFigure);\r\ncheckOnLoad(ajax_send);\r\n\r\nfunction addClick(){\r\n    //向后兼容  老的浏览器对方法的兼容\r\n    if(!document.getElementById){\r\n        return false\r\n    }\r\n    if(!document.getElementsByTagName){\r\n        return false\r\n    }\r\n    var liList = document.getElementsByTagName(\"a\"),\r\n        len = liList.length;\r\n    for(var i = 0;i < len ;i++){\r\n        liList[i].onclick = function () {\r\n            showPic(this);\r\n            return false\r\n        }\r\n    }\r\n}\r\n\r\nfunction showPic(pic) {\r\n    var _pic = pic,\r\n        _href = _pic.getAttribute(\"href\"),\r\n        _title = _pic.getAttribute(\"title\"),\r\n        _targetName = document.getElementById(\"pic_name\"),\r\n        _targetImg = document.getElementById(\"default\");\r\n    _targetImg.setAttribute(\"src\",_href);\r\n    // _targetName.childNodes[0].nodeValue = _title; 代码里面的每一个元素都是一个节点\r\n    _targetName.firstChild.nodeValue = _title;\r\n}\r\n\r\nfunction appendFigure() {\r\n    var _figCaption =  document.createElement(\"figcaption\"),\r\n        _img = document.createElement(\"img\"),\r\n        _text1 = document.createTextNode(\"图片名称\"),\r\n        _figure = document.getElementById(\"figure\");\r\n    _figCaption.setAttribute(\"id\",\"pic_name\");\r\n    _figCaption.appendChild(_text1);\r\n    _img.setAttribute(\"src\",\"../images/default.jpg\");\r\n    _img.setAttribute(\"alt\",\"iColor\");\r\n    _img.setAttribute(\"id\",\"default\");\r\n\r\n    _figure.appendChild(_figCaption);\r\n    _figure.appendChild(_img);\r\n}\r\n\r\n/*实用自定义函数*/\r\n//在指定元素后面插入元素\r\nfunction insertAfter(newElement,targetElement) {\r\n    var _newElement = newElement,\r\n        _targetElement = targetElement,\r\n        _parentNode = _targetElement.parentNode;\r\n    if(_parentNode.lastChild == _targetElement){\r\n        _parentNode.appendChild(_newElement)\r\n    }else{\r\n        _parentNode.insertBefore(_newElement,_targetElement.nextSibling     )\r\n    }\r\n}\r\n\r\n// 完档加载完成之后才能执行函数\r\n//判断window.onload对象是否被占用  兼容\r\nfunction checkOnLoad(fun) {\r\n    var oldLoad = window.onload;\r\n    if(typeof window.onload != \"function\"){\r\n        //未被占用\r\n        window.onload = fun()\r\n    }else{\r\n        //被占用   重新定义onload函数\r\n        window.onload = function(){\r\n            oldLoad();\r\n            fun()\r\n        }\r\n    }\r\n}\r\n\r\n//h5 新属性\r\n\r\n/*\r\n* video\r\n*\r\n* */\r\n\r\n\r\n\r\n//XMLHttpRequest  兼容处理\r\n//ie5 , ie6浏览器  ActiveXObject对象  创建ajax请求\r\n//ie7+ 其他浏览器  XMLHttpRequest  对象  创建ajax请求\r\nfunction getXMLHttpRequest() {\r\n    if(window.XMLHttpRequest){\r\n        return new XMLHttpRequest()\r\n    }else{\r\n        return new ActiveXObject(\"Microsoft.XMLHTTP\")\r\n    }\r\n}\r\n\r\n//创建ajax请求 同域请求\r\nfunction ajax_send() {\r\n    var xhr = getXMLHttpRequest();\r\n    if(xhr){\r\n        xhr.open(\"GET\",\"../html/example.txt\",true);\r\n        xhr.onreadystatechange = function () {\r\n            if(xhr.readyState == 4){\r\n                //转状态值为4  表示服务器有数据返回\r\n                console.log(xhr.response);\r\n                var p = document.createElement(\"p\"),\r\n                    text = document.createTextNode(xhr.response);\r\n                p.appendChild(text);\r\n                document.getElementById(\"ajax\").appendChild(p);\r\n            }\r\n        };\r\n        xhr.send()\r\n    }else{\r\n        alert(\"sorry ajax is not support\")\r\n    }\r\n}\r\n\r\n"]}